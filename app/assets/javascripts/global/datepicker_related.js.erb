/**
 * Everything related to the datepicker goes here.
 * The javascript of the datepicker is included as gem.
 */

/**
 * Adds date pickers to every input field of the class "date_picker"
 */
function initializeDatePickers() {
    $(".date_picker").each(function () {
        addDatePicker(this.id);
    });
}

/**
 * Adds a date picker to the field with the given id
 * The format of the date picker is DD.MM.YYYY (eg 15.04.2011)
 * @param id the id of the field you want to add a datepicker
 */
function addDatePicker(id) {
    // We need to map locale to the matching locale in datepicker.
    var regionals = {'de': 'de', 'fr': 'fr-CH', 'en': 'en-GB', 'it': 'it'}
    var regional = regionals[locale];

    // Use regionalized datepicker, but override certain attributes
    var datepicker_options = $.extend(
            {},
            $.datepicker.regional[regional],
            {
                minDate: "-124Y",
                maxDate: "+0D",
                firstDay: 1,
                dateFormat: "dd.mm.yy",
                changeYear: true,
                yearRange: "-124:+0",
                showOn: "both",
                buttonImage: "<%= asset_data_uri 'cal.gif' %>",
                buttonText: I18n.t("simple_form.hints.webgrouper_patient_case.pick_date"),
                buttonImageOnly: true,
                onSelect: function () { this.focus(); }
            });
    // Instantiate the datepicker.
    $("#" + id).datepicker(datepicker_options);
}


/**
 * Disables or enables the input field for length of stay.
 * @param boolean doDisable
 */
function disableLosInput(doDisable) {
    var tooltip = I18n.t("simple_form.hints.webgrouper_patient_case.disabled_los");
    var $los = $("input[id$='_patient_case_los']")
    if (doDisable) {
        $los.prop('readonly', 'readonly');
        $los.prop('title', tooltip);
    } else {
        $los.prop('readonly', false);
        $los.prop('title', "");
    }
}

var DATE_FORMAT = "DD.MM.YYYY";
function parseDate(str) {
    return moment(str, DATE_FORMAT)
}

function formatDate(date) {
    return date.format(DATE_FORMAT)
}


