# Deprecated, see dokuwiki

# Welcome

This is a new implementation in Ruby on Rails of the swissDRG webgrouper, 
found at https://webgrouper.swissdrg.org/ . For further information, see [The PSE-Page](http://pym.unibe.ch/pse/wiki/doku.php?id=pse1:home).

### Configuring the database

Use the standard `rake db:create` to get started, then make sure that you have a valid configuration for
a postgresql database seeded with the `classifications-parser` project in `db/pg_config.yml`.
Then you can run the task `rake db:seed` to fill the database with all classifications necesary.

#### Create indices

So the queries are not dead slow, it is best to create indices with the following command:

    RAILS_ENV=production rake db:mongoid:create_indexes

## Run tests

You can run our specs by entering the following:

If you just want to run tests once, it is enough to run rspec by itself

	bundle exec rspec spec/

If you need to repeatedly run the tests, you are advised to have a rails instance running in the background for testing
by executing

    theine_server

The tests can then be executed much faster by executing them on the theine instances via

    theine rspec spec/

## Adding a new system

Just add a new entry in the Systems table. You can either do this by hand (in the rails console)
update the file `db/systems.csv` and then use the script `db/seed_systems.rb`.

All files needed for this version (specs, catalgue...) have to be coppied to the specs folder,
into a subfolder named after the system_id.

In case you want to add a new Kernel, you need to change the initializer found in `config/initializers/load_grouper_kernel.rb`.
Make sure to empty the cache using

    RAILS_ENV=production bundle exec rake tmp:cache:clear

Since, the new kernel would not be used otherwise (only the cached, old one).